<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.xc.dao.ConvertBondApplyMapper" >
  <resultMap id="BaseResultMap" type="com.xc.pojo.ConvertBondApply" >
    <constructor >
      <idArg column="id" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="agent_id" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="user_id" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="tel" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="bond_id" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="apply_money" jdbcType="DECIMAL" javaType="java.math.BigDecimal" />
      <arg column="apply_num" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="suc_num" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="suc_mony" jdbcType="DECIMAL" javaType="java.math.BigDecimal" />
      <arg column="apply_date" jdbcType="TIMESTAMP" javaType="java.util.Date" />
      <arg column="status" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="refund_mony" jdbcType="DECIMAL" javaType="java.math.BigDecimal" />
      <arg column="suc_date" jdbcType="TIMESTAMP" javaType="java.util.Date" />
    </constructor>
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, agent_id, user_id, tel, bond_id, apply_money, apply_num, suc_num, suc_mony, apply_date, 
    status, refund_mony, suc_date
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.xc.pojo.ConvertBondApplyExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from convert_bond_apply
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from convert_bond_apply
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from convert_bond_apply
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.xc.pojo.ConvertBondApplyExample" >
    delete from convert_bond_apply
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.xc.pojo.ConvertBondApply" >
    insert into convert_bond_apply (id, agent_id, user_id, 
      tel, bond_id, apply_money, 
      apply_num, suc_num, suc_mony, 
      apply_date, status, refund_mony, 
      suc_date)
    values (#{id,jdbcType=INTEGER}, #{agentId,jdbcType=INTEGER}, #{userId,jdbcType=INTEGER}, 
      #{tel,jdbcType=VARCHAR}, #{bondId,jdbcType=INTEGER}, #{applyMoney,jdbcType=DECIMAL}, 
      #{applyNum,jdbcType=INTEGER}, #{sucNum,jdbcType=INTEGER}, #{sucMony,jdbcType=DECIMAL}, 
      #{applyDate,jdbcType=TIMESTAMP}, #{status,jdbcType=INTEGER}, #{refundMony,jdbcType=DECIMAL}, 
      #{sucDate,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.xc.pojo.ConvertBondApply" >
    insert into convert_bond_apply
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="agentId != null" >
        agent_id,
      </if>
      <if test="userId != null" >
        user_id,
      </if>
      <if test="tel != null" >
        tel,
      </if>
      <if test="bondId != null" >
        bond_id,
      </if>
      <if test="applyMoney != null" >
        apply_money,
      </if>
      <if test="applyNum != null" >
        apply_num,
      </if>
      <if test="sucNum != null" >
        suc_num,
      </if>
      <if test="sucMony != null" >
        suc_mony,
      </if>
      <if test="applyDate != null" >
        apply_date,
      </if>
      <if test="status != null" >
        status,
      </if>
      <if test="refundMony != null" >
        refund_mony,
      </if>
      <if test="sucDate != null" >
        suc_date,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="agentId != null" >
        #{agentId,jdbcType=INTEGER},
      </if>
      <if test="userId != null" >
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="tel != null" >
        #{tel,jdbcType=VARCHAR},
      </if>
      <if test="bondId != null" >
        #{bondId,jdbcType=INTEGER},
      </if>
      <if test="applyMoney != null" >
        #{applyMoney,jdbcType=DECIMAL},
      </if>
      <if test="applyNum != null" >
        #{applyNum,jdbcType=INTEGER},
      </if>
      <if test="sucNum != null" >
        #{sucNum,jdbcType=INTEGER},
      </if>
      <if test="sucMony != null" >
        #{sucMony,jdbcType=DECIMAL},
      </if>
      <if test="applyDate != null" >
        #{applyDate,jdbcType=TIMESTAMP},
      </if>
      <if test="status != null" >
        #{status,jdbcType=INTEGER},
      </if>
      <if test="refundMony != null" >
        #{refundMony,jdbcType=DECIMAL},
      </if>
      <if test="sucDate != null" >
        #{sucDate,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.xc.pojo.ConvertBondApplyExample" resultType="java.lang.Integer" >
    select count(*) from convert_bond_apply
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update convert_bond_apply
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.agentId != null" >
        agent_id = #{record.agentId,jdbcType=INTEGER},
      </if>
      <if test="record.userId != null" >
        user_id = #{record.userId,jdbcType=INTEGER},
      </if>
      <if test="record.tel != null" >
        tel = #{record.tel,jdbcType=VARCHAR},
      </if>
      <if test="record.bondId != null" >
        bond_id = #{record.bondId,jdbcType=INTEGER},
      </if>
      <if test="record.applyMoney != null" >
        apply_money = #{record.applyMoney,jdbcType=DECIMAL},
      </if>
      <if test="record.applyNum != null" >
        apply_num = #{record.applyNum,jdbcType=INTEGER},
      </if>
      <if test="record.sucNum != null" >
        suc_num = #{record.sucNum,jdbcType=INTEGER},
      </if>
      <if test="record.sucMony != null" >
        suc_mony = #{record.sucMony,jdbcType=DECIMAL},
      </if>
      <if test="record.applyDate != null" >
        apply_date = #{record.applyDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.status != null" >
        status = #{record.status,jdbcType=INTEGER},
      </if>
      <if test="record.refundMony != null" >
        refund_mony = #{record.refundMony,jdbcType=DECIMAL},
      </if>
      <if test="record.sucDate != null" >
        suc_date = #{record.sucDate,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update convert_bond_apply
    set id = #{record.id,jdbcType=INTEGER},
      agent_id = #{record.agentId,jdbcType=INTEGER},
      user_id = #{record.userId,jdbcType=INTEGER},
      tel = #{record.tel,jdbcType=VARCHAR},
      bond_id = #{record.bondId,jdbcType=INTEGER},
      apply_money = #{record.applyMoney,jdbcType=DECIMAL},
      apply_num = #{record.applyNum,jdbcType=INTEGER},
      suc_num = #{record.sucNum,jdbcType=INTEGER},
      suc_mony = #{record.sucMony,jdbcType=DECIMAL},
      apply_date = #{record.applyDate,jdbcType=TIMESTAMP},
      status = #{record.status,jdbcType=INTEGER},
      refund_mony = #{record.refundMony,jdbcType=DECIMAL},
      suc_date = #{record.sucDate,jdbcType=TIMESTAMP}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.xc.pojo.ConvertBondApply" >
    update convert_bond_apply
    <set >
      <if test="agentId != null" >
        agent_id = #{agentId,jdbcType=INTEGER},
      </if>
      <if test="userId != null" >
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="tel != null" >
        tel = #{tel,jdbcType=VARCHAR},
      </if>
      <if test="bondId != null" >
        bond_id = #{bondId,jdbcType=INTEGER},
      </if>
      <if test="applyMoney != null" >
        apply_money = #{applyMoney,jdbcType=DECIMAL},
      </if>
      <if test="applyNum != null" >
        apply_num = #{applyNum,jdbcType=INTEGER},
      </if>
      <if test="sucNum != null" >
        suc_num = #{sucNum,jdbcType=INTEGER},
      </if>
      <if test="sucMony != null" >
        suc_mony = #{sucMony,jdbcType=DECIMAL},
      </if>
      <if test="applyDate != null" >
        apply_date = #{applyDate,jdbcType=TIMESTAMP},
      </if>
      <if test="status != null" >
        status = #{status,jdbcType=INTEGER},
      </if>
      <if test="refundMony != null" >
        refund_mony = #{refundMony,jdbcType=DECIMAL},
      </if>
      <if test="sucDate != null" >
        suc_date = #{sucDate,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.xc.pojo.ConvertBondApply" >
    update convert_bond_apply
    set agent_id = #{agentId,jdbcType=INTEGER},
      user_id = #{userId,jdbcType=INTEGER},
      tel = #{tel,jdbcType=VARCHAR},
      bond_id = #{bondId,jdbcType=INTEGER},
      apply_money = #{applyMoney,jdbcType=DECIMAL},
      apply_num = #{applyNum,jdbcType=INTEGER},
      suc_num = #{sucNum,jdbcType=INTEGER},
      suc_mony = #{sucMony,jdbcType=DECIMAL},
      apply_date = #{applyDate,jdbcType=TIMESTAMP},
      status = #{status,jdbcType=INTEGER},
      refund_mony = #{refundMony,jdbcType=DECIMAL},
      suc_date = #{sucDate,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>